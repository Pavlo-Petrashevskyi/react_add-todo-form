{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","todosFromServer","usersFromServer","find","App","useState","selectedUser","setSelectedUser","setTitle","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","length","copyTitle","slice","split","filter","letter","includes","userFromServer","undefined","push","sort","todo1","todo2","type","value","placeholder","onChange","e","currentTarget","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3831eac.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype UserProps = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<UserProps> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype TodoInfoProps = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user\n        ? <UserInfo user={todo.user} key={todo.user.id} />\n        : null}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype TodoListProps = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState('0');\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (selectedUser === '0') {\n      setUserError(true);\n    }\n\n    if (!title || title.trim().length === 0) {\n      return setTitleError(true);\n    }\n\n    const copyTitle = title.slice().split('');\n\n    // eslint-disable-next-line max-len\n    const validation = 'QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm0123456789йцукенгґшщзхїфівапролджєячсмитьбюЙЦУКЕНГҐШЩЩЗХЇФІВАПРОЛДЖЄЯЧСМИТЬБЮ ';\n\n    if (copyTitle.length !== copyTitle\n      .filter((letter: string) => validation.includes(letter)).length) {\n      return null;\n    }\n\n    const user = usersFromServer\n      .find(userFromServer => userFromServer.id === +selectedUser);\n\n    if (user !== undefined) {\n      todos.push({\n        id: todos\n          .sort((todo1, todo2) => todo2.id - todo1.id)[0].id + 1,\n        title,\n        completed: false,\n        userId: user.id,\n        user,\n      });\n\n      setSelectedUser('0');\n      setTitle('');\n    }\n\n    return todosFromServer;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              value={title}\n              placeholder=\"Enter a title\"\n              onChange={(e) => {\n                setTitle(e.currentTarget.value);\n                setTitleError(false);\n              }}\n            />\n          </label>\n\n          {titleError && (\n            <span\n              className=\"error\"\n            >\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          {'User: '}\n          <select\n            value={selectedUser}\n            data-cy=\"userSelect\"\n            onChange={(e) => {\n              setSelectedUser(e.target.value);\n              setUserError(false);\n            }}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(userFromServer => (\n              <option\n                value={userFromServer.id}\n              >\n                {userFromServer.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && (\n            <span\n              className=\"error\"\n            >\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}